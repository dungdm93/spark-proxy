nameOverride: ""
fullnameOverride: ""

image:
  repository: ghcr.io/dungdm93/docker/spark-proxy
  tag: ""
  pullPolicy: IfNotPresent
  pullSecrets: []

labels: {}
podLabels: {}
annotations: {}
podAnnotations: {}

env: []
extraArgs: []
extraVolumes: []
extraVolumeMounts: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

securityContext: {}
podSecurityContext: {}

schedulerName: null
runtimeClassName: null
priorityClassName: null

affinity: {}
tolerations: []
nodeSelector: {}

sparkConfig: {}
sparkProxyConfig:
  type: kubernetes
  kubernetes:
    ## kubernetes.namespace that spark-proxy going to watch, posible values:
    ## * null or "" (empty string): watch all namespace (global)
    ## "~": watch current namespace (.Release.Namespace)
    ## otherwise, watch user provided namespace
    namespace: "~"
    ## other properties here
    # resyncPeriodMs: ""

persistentStore:
  enabled: false
  subPath: ""

  # Option 1: helm managed PVC
  storageClass: null
  accessMode: ReadWriteOnce
  size: 1G

  # Option 2: existing PVC
  existingClaim: null

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  imagePullSecrets:

rbac:
  create: true

service:
  type: ClusterIP
  clusterIP:
  loadBalancerIP:
  loadBalancerClass:
  allocateLoadBalancerNodePorts: true
  nodePort:
  sessionAffinity:
  sessionAffinityConfig:
  internalTrafficPolicy:
  externalTrafficPolicy:
  annotations: {}

ingress:
  enabled: false
  ingressClass: ""
  annotations: {}
    # kubernetes.io/tls-acme: "true"
    # kubernetes.io/ingress.class: nginx
  hosts:
    - host: spark-proxy.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
